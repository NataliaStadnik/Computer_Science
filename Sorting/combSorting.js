// представляет собой улучшенный вариант сортировки пузырьком.
// Сортировка пузырьком основана на сравнении и перестановке соседних элементов,
// то есть разница их индексов всегда равна 1.
// Но если увеличить ее и сравнивать элементы стоящие на большем расстоянии друг от друга,
// то минимальные элементы, находящиеся в конце массива, можно передвинуть в его начало за меньшее количество перестановок
// имеет среднюю сложность O(n log n).

// число зависит от длины самого массива — чем больше массив, тем больший разрыв можно брать между элементами.
// это расстояние должно постепенно уменьшиться до 1, чтобы на последней итерации цикла мы смогли
// проверить все элементы один за другим как в обычной сортировке пузырьком.

// Число, на которое должен раз за разом уменьшаться разрыв, было названо фактором уменьшения
// ( 1 / ( 1-e^(-φ) ) = 1.247330950103979.

function combSort(arr) {
  const l = arr.length;
  const factor = 1.247;
  let gapFactor = l / factor;

  while (gapFactor > 1) {
    const gap = Math.round(gapFactor);
    for (let i = 0, j = gap; j < l; i++, j++) {
      if (arr[i] > arr[j]) {
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
    }
    gapFactor = gapFactor / factor;
  }
  return arr;
}

let inputArr = [5, 2, 22, 4, 6, 1, 3];
console.log(combSort(inputArr));
