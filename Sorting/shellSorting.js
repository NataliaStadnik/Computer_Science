// усовершенствует сортировку вставками
// Слабое место этого алгоритма — выбор расстояния между двумя сравниваемыми элементами и того как быстро и
// каким образом оно стремится к 1 .
// Длина такого отрезка напрямую сказывается на скорости работы алгоритма: первое значение — это половина длины
// сортируемого массива, второе — половина от предыдущего и так далее, каждый раз округляя значение до целого числа.
// Такой алгоритм отсортирует массив в худшем случае со сложностью O(n²), а в лучшем — O(n log² n).

function ShellSort(arr) {
  const l = arr.length;
  let gap = Math.floor(l / 2);
  while (gap >= 1) {
    for (let i = gap; i < l; i++) {
      const current = arr[i];
      let j = i;
      while (j > 0 && arr[j - gap] > current) {
        arr[j] = arr[j - gap];
        j -= gap;
      }
      arr[j] = current;
    }
    gap = Math.floor(gap / 2);
  }
  return arr;
}

let inputArr = [5, 2, 22, 4, 6, 1, 3];
console.log(ShellSort(inputArr));
